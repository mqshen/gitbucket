CREATE TABLE IF NOT EXISTS `VERSIONS` (
	`MAJOR` INT(3),
	`MINOR` INT(4),
	`UPDATED` TIMESTAMP
);

CREATE TABLE IF NOT EXISTS `ACCOUNT`(
    `USER_NAME` VARCHAR(100) NOT NULL PRIMARY KEY,
	`MAIL_ADDRESS` VARCHAR(100) NOT NULL UNIQUE,
	`PASSWORD` VARCHAR(40) NOT NULL,
	`ADMINISTRATOR` BOOLEAN NOT NULL,
	`URL` VARCHAR(200),
	`REGISTERED_DATE` TIMESTAMP NOT NULL,
	`UPDATED_DATE` TIMESTAMP NOT NULL,
	`LAST_LOGIN_DATE` TIMESTAMP
);

CREATE TABLE IF NOT EXISTS `REPOSITORY`(
	`USER_NAME` VARCHAR(100) NOT NULL,
	`REPOSITORY_NAME` VARCHAR(100) NOT NULL,
	`PRIVATE` BOOLEAN NOT NULL,
	`DESCRIPTION` TEXT,
	`DEFAULT_BRANCH` VARCHAR(100),
	`REGISTERED_DATE` TIMESTAMP NOT NULL,
	`UPDATED_DATE` TIMESTAMP NOT NULL,
	`LAST_ACTIVITY_DATE` TIMESTAMP NOT NULL,
	PRIMARY KEY(`USER_NAME`, `REPOSITORY_NAME`),
	CONSTRAINT `IDX_REPOSITORY_FK0` FOREIGN KEY (`USER_NAME`) REFERENCES `ACCOUNT` (`USER_NAME`)
);

CREATE TABLE IF NOT EXISTS `MILESTONE` (
	`USER_NAME` VARCHAR(100) NOT NULL,
	`REPOSITORY_NAME` VARCHAR(100) NOT NULL,
	`MILESTONE_ID` INT AUTO_INCREMENT PRIMARY KEY,
	`TITLE` VARCHAR(100) NOT NULL,
	`DESCRIPTION` TEXT,
	`DUE_DATE` TIMESTAMP,
	`CLOSED_DATE` TIMESTAMP NULL,
	CONSTRAINT `IDX_MILESTONE_FK0` FOREIGN KEY (`USER_NAME`, `REPOSITORY_NAME`) REFERENCES `REPOSITORY` (`USER_NAME`, `REPOSITORY_NAME`)
);

CREATE TABLE IF NOT EXISTS `COLLABORATOR`(
	`USER_NAME` VARCHAR(100) NOT NULL,
	`REPOSITORY_NAME` VARCHAR(100) NOT NULL,
	`COLLABORATOR_NAME` VARCHAR(100) NOT NULL,
	PRIMARY KEY (`USER_NAME`, `REPOSITORY_NAME`, `COLLABORATOR_NAME`),
	CONSTRAINT `IDX_COLLABORATOR_FK0` FOREIGN KEY (`USER_NAME`, `REPOSITORY_NAME`) REFERENCES `REPOSITORY` (`USER_NAME`, `REPOSITORY_NAME`),
	CONSTRAINT `IDX_COLLABORATOR_FK1` FOREIGN KEY (`COLLABORATOR_NAME`) REFERENCES `ACCOUNT` (`USER_NAME`)
);

CREATE TABLE IF NOT EXISTS `ISSUE`(
	`USER_NAME` VARCHAR(100) NOT NULL,
	`REPOSITORY_NAME` VARCHAR(100) NOT NULL,
	`ISSUE_ID` INT NOT NULL,
	`OPENED_USER_NAME` VARCHAR(100) NOT NULL,
	`MILESTONE_ID` INT,
	`ASSIGNED_USER_NAME` VARCHAR(100),
	`TITLE` TEXT NOT NULL,
	`CONTENT` TEXT,
	`CLOSED` BOOLEAN NOT NULL,
	`REGISTERED_DATE` TIMESTAMP NOT NULL,
	`UPDATED_DATE` TIMESTAMP NOT NULL,
	PRIMARY KEY (`ISSUE_ID`, `USER_NAME`, `REPOSITORY_NAME`),
	CONSTRAINT `IDX_ISSUE_ID_FK0` FOREIGN KEY (`USER_NAME`, `REPOSITORY_NAME`) REFERENCES `REPOSITORY` (`USER_NAME`, `REPOSITORY_NAME`),
	CONSTRAINT `IDX_ISSUE_ID_FK1` FOREIGN KEY (`OPENED_USER_NAME`) REFERENCES `ACCOUNT` (`USER_NAME`),
	CONSTRAINT `IDX_ISSUE_ID_FK2` FOREIGN KEY (`MILESTONE_ID`) REFERENCES `MILESTONE` (`MILESTONE_ID`)
);


CREATE TABLE IF NOT EXISTS `ISSUE_ID` (
	`USER_NAME` VARCHAR(100) NOT NULL,
	`REPOSITORY_NAME` VARCHAR(100) NOT NULL,
	`ISSUE_ID` INT NOT NULL
);

CREATE TABLE IF NOT EXISTS `ISSUE_COMMENT`(
    `COMMENT_ID` INT AUTO_INCREMENT PRIMARY KEY,
	`USER_NAME` VARCHAR(100) NOT NULL,
	`REPOSITORY_NAME` VARCHAR(100) NOT NULL,
	`ISSUE_ID` INT NOT NULL,
	`ACTION` VARCHAR(10),
	`COMMENTED_USER_NAME` VARCHAR(100) NOT NULL,
	`CONTENT` TEXT NOT NULL,
	`REGISTERED_DATE` TIMESTAMP NOT NULL,
	`UPDATED_DATE` TIMESTAMP NOT NULL,
	CONSTRAINT `IDX_ISSUE_COMMENT_1` UNIQUE (`USER_NAME`, `REPOSITORY_NAME`, `ISSUE_ID`, `COMMENT_ID`),
	CONSTRAINT `IDX_ISSUE_COMMENT_FK0` FOREIGN KEY (`USER_NAME`, `REPOSITORY_NAME`, `ISSUE_ID`) REFERENCES `ISSUE` (`USER_NAME`, `REPOSITORY_NAME`, `ISSUE_ID`)
);

CREATE TABLE IF NOT EXISTS `LABEL`(
	`LABEL_ID` INT AUTO_INCREMENT PRIMARY KEY,
	`USER_NAME` VARCHAR(100) NOT NULL,
	`REPOSITORY_NAME` VARCHAR(100) NOT NULL,
	`LABEL_NAME` VARCHAR(100) NOT NULL,
	`COLOR` CHAR(6) NOT NULL,
	CONSTRAINT `IDX_LABEL_1` UNIQUE (`USER_NAME`, `REPOSITORY_NAME`, `LABEL_ID`)
);

CREATE TABLE IF NOT EXISTS `ISSUE_LABEL`(
	`USER_NAME`	 VARCHAR(100) NOT NULL,
	`REPOSITORY_NAME` VARCHAR(100) NOT NULL,
	`ISSUE_ID` INT NOT NULL,
	`LABEL_ID` INT NOT NULL,
	PRIMARY KEY (`USER_NAME`, `REPOSITORY_NAME`, `ISSUE_ID`, `LABEL_ID`),
	CONSTRAINT `IDX_ISSUE_LABEL_FK0` FOREIGN KEY (`USER_NAME`, `REPOSITORY_NAME`, `ISSUE_ID`) REFERENCES `ISSUE` (`USER_NAME`, `REPOSITORY_NAME`, `ISSUE_ID`)
);

INSERT INTO ACCOUNT (
  USER_NAME,
  MAIL_ADDRESS,
  PASSWORD,
  ADMINISTRATOR,
  URL,
  REGISTERED_DATE,
  UPDATED_DATE,
  LAST_LOGIN_DATE
) VALUES (
  'root',
  'root@localhost',
  'dc76e9f0c0006e8f919e0c515c66dbba3982f785',
  true,
  'https://github.com/mysql/gitbucketTest',
  NOW(),
  NOW(),
  NULL
);
